# -*- coding: utf-8 -*-
"""primary_demo.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-jA9Ok9-Z8SlKawgRf3CPKfCi8dqXgNC
"""

# Commented out IPython magic to ensure Python compatibility.
# STEP 1: Clone or pull latest code
import os
if os.path.exists("derivative-pricing"):
#     %cd derivative-pricing
    !git pull
else:
    !git clone https://github.com/ShuqiZHENG369/derivative-pricing.git
#     %cd derivative-pricing

# STEP 2: Install dependencies
!pip install yfinance pandas numpy pandas_datareader lxml fredapi

# STEP 3: (RELOAD if needed)
import importlib
import market_env_updated
importlib.reload(market_env_updated)

from market_env_updated import MarketEnvironment
from bsm_model import BlackScholesModel
from greeks import GreeksCalculator
from implied_vol import auto_implied_vol
from visualization import run_full_visualization
print("ðŸ“ˆ Welcome to the BSM Option Pricing Interface\n")

# Step 1: construct market environment
env = MarketEnvironment()
env.build()
env.summary()

model = BlackScholesModel(env.spot, env.strike, env.maturity, env.rate, env.volatility, env.dividend_yield)
model.summary_prices()

greeks = GreeksCalculator(model, "call")
results = greeks.compute_greeks()

print("\nðŸ“Š Greeks:")
for k, v in results.items():
    print(f"{k}: {v:.4f}")

run_full_visualization(env)